# Copyright 2022 flashcat.cloud | 快猫星云
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
{{- if eq .Values.nwebapi.type "internal" -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: nwebapi-config
data:
  webapi.conf: |-
    RunMode = "release"
    MetricsYamlFile = "/app/etc/metrics.yaml"
    BuiltinAlertsDir = "/app/etc/alerts"
    BuiltinDashboardsDir = "/app/etc/dashboards"
    [[NotifyChannels]]
    Label = "邮箱"
    Key = "email"
    [[NotifyChannels]]
    Label = "钉钉机器人"
    Key = "dingtalk"
    [[NotifyChannels]]
    Label = "企微机器人"
    Key = "wecom"
    [[NotifyChannels]]
    Label = "飞书机器人"
    Key = "feishu"
    [[ContactKeys]]
    Label = "Wecom Robot Token"
    Key = "wecom_robot_token"
    [[ContactKeys]]
    Label = "Dingtalk Robot Token"
    Key = "dingtalk_robot_token"
    [[ContactKeys]]
    Label = "Feishu Robot Token"
    Key = "feishu_robot_token"
    [Log]
    Dir = "logs"
    Level = "DEBUG"
    Output = "stdout"
    [HTTP]
    Host = "0.0.0.0"
    Port = {{ template "nightingale.nwebapi.port" . }}
    CertFile = ""
    KeyFile = ""
    PrintAccessLog = true
    PProf = false
    ShutdownTimeout = 30
    MaxContentLength = 67108864
    ReadTimeout = 20
    WriteTimeout = 40
    IdleTimeout = 120
    [JWTAuth]
    SigningKey = "5b94a0fd640fe2765af826acfe42d151"
    AccessExpired = 1500
    RefreshExpired = 10080
    RedisKeyPrefix = "/jwt/"
    [BasicAuth]
    user001 = "ccc26da7b9aba533cbb263a36c07dcc5"
    [AnonymousAccess]
    PromQuerier = false
    AlertDetail = false
    [LDAP]
    Enable = false
    Host = "ldap.example.org"
    Port = 389
    BaseDn = "dc=example,dc=org"
    BindUser = "cn=manager,dc=example,dc=org"
    BindPass = "*******"
    AuthFilter = "(&(uid=%s))"
    CoverAttributes = true
    TLS = false
    StartTLS = true
    DefaultRoles = ["Standard"]
    [LDAP.Attributes]
    Nickname = "cn"
    Phone = "mobile"
    Email = "mail"
    [Redis]
    Address = "{{ template "nightingale.redis.addr" . }}"
    Password = ""
    [Gorm]
    Debug = true
    DBType = "mysql"
    MaxLifetime = 7200
    MaxOpenConns = 150
    MaxIdleConns = 50
    TablePrefix = ""
    EnableAutoMigrate = false
    [MySQL]
    Address = "{{ template "nightingale.database.host" . }}:{{ template "nightingale.database.port" . }}"
    User = "{{ template "nightingale.database.username" . }}"
    Password = "{{ template "nightingale.database.rawPassword" . }}"
    DBName = "n9e_v5"
    Parameters = "charset=utf8mb4&parseTime=True&loc=Local&allowNativePasswords=true"
    [Postgres]
    Address = "postgres:5432"
    User = "root"
    Password = "1234"
    DBName = "n9e_v5"
    SSLMode = "disable"
    [[Clusters]]
    Name = "Default"
    Prom = "http://{{ template "nightingale.prometheus.host" . }}:{{ template "nightingale.prometheus.port" .}}"
    BasicAuthUser = ""
    BasicAuthPass = ""
    Timeout = 30000
    DialTimeout = 10000
    TLSHandshakeTimeout = 30000
    ExpectContinueTimeout = 1000
    IdleConnTimeout = 90000
    KeepAlive = 30000
    MaxConnsPerHost = 0
    MaxIdleConns = 100
    MaxIdleConnsPerHost = 100
    [Ibex]
    Address = "http://ibex:10090"
    BasicAuthUser = "ibex"
    BasicAuthPass = "ibex"
    Timeout = 3000
  metrics.yaml: |-
    cpu_usage_idle: CPU空闲率（单位：%）
    cpu_usage_active: CPU使用率（单位：%）
    cpu_usage_system: CPU内核态时间占比（单位：%）
    cpu_usage_user: CPU用户态时间占比（单位：%）
    cpu_usage_nice: 低优先级用户态CPU时间占比，也就是进程nice值被调整为1-19之间的CPU时间。这里注意，nice可取值范围是-20到19，数值越大，优先级反而越低（单位：%）
    cpu_usage_iowait: CPU等待I/O的时间占比（单位：%）
    cpu_usage_irq: CPU处理硬中断的时间占比（单位：%）
    cpu_usage_softirq: CPU处理软中断的时间占比（单位：%）
    cpu_usage_steal: 在虚拟机环境下有该指标，表示CPU被其他虚拟机争用的时间占比，超过20就表示争抢严重（单位：%）
    cpu_usage_guest: 通过虚拟化运行其他操作系统的时间，也就是运行虚拟机的CPU时间占比（单位：%）
    cpu_usage_guest_nice: 以低优先级运行虚拟机的时间占比（单位：%）
    
    disk_free: 硬盘分区剩余量（单位：byte）
    disk_used: 硬盘分区使用量（单位：byte）
    disk_used_percent: 硬盘分区使用率（单位：%）
    disk_total: 硬盘分区总量（单位：byte）
    disk_inodes_free: 硬盘分区inode剩余量
    disk_inodes_used: 硬盘分区inode使用量
    disk_inodes_total: 硬盘分区inode总量
    
    diskio_io_time: 从设备视角来看I/O请求总时间，队列中有I/O请求就计数（单位：毫秒），counter类型，需要用函数求rate才有使用价值
    diskio_iops_in_progress: 已经分配给设备驱动且尚未完成的IO请求，不包含在队列中但尚未分配给设备驱动的IO请求，gauge类型
    diskio_merged_reads: 相邻读请求merge读的次数，counter类型
    diskio_merged_writes: 相邻写请求merge写的次数，counter类型
    diskio_read_bytes: 读取的byte数量，counter类型，需要用函数求rate才有使用价值
    diskio_read_time: 读请求总时间（单位：毫秒），counter类型，需要用函数求rate才有使用价值
    diskio_reads: 读请求次数，counter类型，需要用函数求rate才有使用价值
    diskio_weighted_io_time: 从I/O请求视角来看I/O等待总时间，如果同时有多个I/O请求，时间会叠加（单位：毫秒）
    diskio_write_bytes: 写入的byte数量，counter类型，需要用函数求rate才有使用价值
    diskio_write_time: 写请求总时间（单位：毫秒），counter类型，需要用函数求rate才有使用价值
    diskio_writes: 写请求次数，counter类型，需要用函数求rate才有使用价值
{{- end -}}
