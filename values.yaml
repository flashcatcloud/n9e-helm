# Copyright 2022 flashcat.cloud | 快猫星云
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
expose:
  type: ingress
  tls:
    enabled: false
    certSource: auto
    auto:
      commonName: ""
    secret:
      secretName: ""
  ingress:
    hosts:
      web: hello.n9e.info
    controller: default
    kubeVersionOverride: ""
    annotations: {}
    nightingale:
      annotations: {}
  clusterIP:
    name: nightingale
    annotations: {}
    ports:
      httpPort: 80
      httpsPort: 443
  nodePort:
    name: nightingale
    ports:
      http:
        port: 80
        nodePort: 30007
      https:
        port: 443
        nodePort: 30009
  loadBalancer:
    name: nightingale
    IP: ""
    ports:
      httpPort: 80
      httpsPort: 443
    annotations: {}
    sourceRanges: []

externalURL: http://hello.n9e.info

ipFamily:
  ipv6:
    enabled: false
  ipv4:
    enabled: true

persistence:
  enabled: true
  resourcePolicy: "keep"
  persistentVolumeClaim:
    database:
      existingClaim: ""
      storageClass: ""
      subPath: ""
      accessMode: ReadWriteOnce
      size: 4Gi
    redis:
      existingClaim: ""
      storageClass: ""
      subPath: ""
      accessMode: ReadWriteOnce
      size: 1Gi
    prometheus:
      existingClaim: ""
      storageClass: ""
      subPath: ""
      accessMode: ReadWriteOnce
      size: 4Gi

imagePullPolicy: IfNotPresent

imagePullSecrets:

updateStrategy:
  type: RollingUpdate

logLevel: info

caSecretName: ""

secretKey: "not-a-secure-key"

nginx:
  image:
    repository: docker.io/library/nginx
    tag: stable-alpine
  serviceAccountName: ""
  automountServiceAccountToken: false
  replicas: 1
  # resources:
  #  requests:
  #    memory: 256Mi
  #    cpu: 100m
  nodeSelector: {}
  tolerations: []
  affinity: {}
  ## Additional deployment annotations
  podAnnotations: {}
  ## The priority class to run the pod as
  priorityClassName:

database:
  type: internal
  internal:
    serviceAccountName: ""
    automountServiceAccountToken: false
    image:
      repository: docker.io/library/mysql
      tag: 5.7
    username: "root"
    password: "1234"
    shmSizeLimit: 512Mi
    nodeSelector: {}
    resources: {}
    tolerations: []
    affinity: {}
    priorityClassName:
    initContainer:
      migrator: {}
      permissions: {}
  external:
    host: "192.168.0.1"
    port: "3306"
    name: "n9e_v5"
    username: "user"
    password: "password"
    sslmode: "disable"
  maxIdleConns: 100
  maxOpenConns: 900
  podAnnotations: {}

redis:
  type: internal
  internal:
    serviceAccountName: ""
    automountServiceAccountToken: false
    image:
      repository: docker.io/library/redis
      tag: 6.2
    nodeSelector: {}
    tolerations: []
    affinity: {}
    priorityClassName:
  external:
    addr: "192.168.0.2:6379"
    sentinelMasterSet: ""
    password: ""
    mode: "standalone"
  podAnnotations: {}

prometheus:
  type: internal
  internal:
    username: ""
    password: ""
    serviceAccountName: ""
    automountServiceAccountToken: false
    image:
      repository: docker.io/prom/prometheus
      tag: latest
    nodeSelector: {}
    tolerations: []
    affinity: {}
    priorityClassName:
  external:
    host: "192.168.0.2"
    port: "9090"
    username: ""
    password: ""
  podAnnotations: {}

categraf:
  type: internal
  internal:
    serviceAccountName: ""
    automountServiceAccountToken: false
    image:
      repository: flashcatcloud/categraf
      tag: latest
    nodeSelector: {}
    tolerations: []
    affinity: {}
    priorityClassName:
    ## Parm: categraf.internal.docker_socket  Desc: the path of docker socket on kubelet node.
    ## "unix:///var/run/docker.sock" is default, if your kubernetes runtime is container or others, empty this variable.
    ## docker_socket: ""
    docker_socket: unix:///var/run/docker.sock
  external:
    host: "192.168.0.3"
    port: "8094"
    password: ""
  podAnnotations: {}

nwebapi:
  type: internal
  internal:
    replicas: 1
    serviceAccountName: ""
    automountServiceAccountToken: false
    image:
      repository: flashcatcloud/nightingale
      tag: 5.15.0
    nodeSelector: {}
    tolerations: []
    affinity: {}
    priorityClassName:
  external:
    host: "192.168.0.4"
    port: "18000"
  podAnnotations: {}

nserver:
  type: internal
  internal:
    replicas: 1
    serviceAccountName: ""
    automountServiceAccountToken: false
    image:
      repository: flashcatcloud/nightingale
      tag: 5.15.0
    nodeSelector: {}
    tolerations: []
    affinity: {}
    priorityClassName:
  external:
    host: "192.168.0.5"
    port: "19000"
  podAnnotations: {}
